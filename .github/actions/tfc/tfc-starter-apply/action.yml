name: 'Terraform Cloud Starter Apply'
description: "Performs a Terraform Apply through TerraForm Cloud"
inputs:
  tfc-organization:
    required: true
    description: "Organization in Terraform Cloud"
  tfc-token:
    required: true
    description: "Token to interact with Terraform Cloud"
  tfc-workspace:
    required: true
    description: "Workspace in Terraform Cloud to use"
  message:
    required: true
outputs:
  projectName:
    value: ${{fromJSON(steps.apply-output.outputs)}}
runs:
  using: "composite"
  steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_wrapper: false      

    - name: Upload Configuration
      uses: hashicorp/tfc-workflows-github/actions/upload-configuration@v1.0.0
      id: apply-upload
      with:
          organization: ${{ inputs.tfc-organization }}
          token: "${{ inputs.tfc-token }}"        
          workspace: ${{ inputs.tfc-workspace }}
          directory: ""
          speculative: false


    - name: Create Apply Run
      uses: hashicorp/tfc-workflows-github/actions/create-run@v1.0.4
      id: apply-run
      with:
        organization: ${{ inputs.tfc-organization }}
        token: "${{ inputs.tfc-token }}"
        workspace: ${{ inputs.tfc-workspace }}
        configuration_version: ${{ steps.apply-upload.outputs.configuration_version_id }}
        plan_only: false
        message: ${{ inputs.message }}

    - name: Gather script outputs
      uses: hashicorp/tfc-workflows-github/actions/workspace-output@v1.3.2
      id: apply-output
      with:
        organization: ${{ inputs.tfc-organization }}
        token: "${{ inputs.tfc-token }}"
        workspace: ${{ inputs.tfc-workspace }}

    - name: Set outputs
      shell: bash
      run: |
        echo "outputs = ${{ steps.apply-output.outputs}}"
        echo "projectName=${{steps.apply-output.outputs}} | jq '.outputs[0].value'" >> $GITHUB_OUTPUT