name: 'OnPushTag'

on:
  workflow_call:

permissions:
  contents: read
  pull-requests: write

jobs:
  terraform-apply-dev:
    runs-on: ubuntu-latest
    environment: dev

    steps:
    - id: checkout
      name: checkout
      uses: actions/checkout@v4
      
    - name: "Terraform Apply"
      uses: CailleachOrg/tfc-shared-actions/.github/actions/tfc-apply@main
      with:
        tfc-organization: "${{ vars.TFC_ORGANIZATION }}"
        tfc-token: "${{ secrets.TFC_TOKEN }}"
        tfc-workspace: "${{github.event.repository.name}}-dev"
        revision: ${{github.ref_name}}
        message: "Tag ${{github.ref_name}} created"

  node-build-package-dev:
    runs-on: ubuntu-latest
    environment: dev

    steps:
    - id: checkout
      name: checkout
      uses: actions/checkout@v4

    - name: SetUp Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '20.x'

    - name: Install dependencies
      run: npm install

    - name: Build and Push Docker image
      uses: vitr/actions-build-and-upload-to-ecs@master
      with:
        access_key_id: ${{ vars.DEV_AWS_ACCESS_KEY_ID }}
        secret_access_key: ${{ secrets.DEV_AWS_SECRET_ACCESS_KEY }}
        account_id: ${{ vars.DEV_AWS_ACCOUNT_ID }}
        repo: ${{github.event.repository.name}}
        region: ${{vars.DEV_AWS_REGION}}
        tags: ${{ github.ref_name }}
        create_repo: false


  terraform-apply-hml:
    runs-on: ubuntu-latest
    environment: hml
    needs: [terraform-apply-dev]

    steps:
    - id: checkout
      name: checkout
      uses: actions/checkout@v4
      
    - name: "Terraform Apply HML"
      uses: CailleachOrg/tfc-shared-actions/.github/actions/tfc-apply@main
      with:
        tfc-organization: "${{ vars.TFC_ORGANIZATION }}"
        tfc-token: "${{ secrets.TFC_TOKEN }}"
        tfc-workspace: "${{github.event.repository.name}}-hml"
        revision: ${{github.ref_name}}

  node-copy-image-hml:
    runs-on: ubuntu-latest
    environment: hml
    needs: [node-build-package-dev]
    if: (vars.DEV_AWS_ACCESS_KEY_ID != vars.HML_AWS_ACCESS_KEY_ID) || (vars.DEV_AWS_REGION != vars.HML_AWS_REGION)

    steps:
    - id: checkout
      name: checkout
      uses: actions/checkout@v4

    - name: "Copy Image"
      uses: ./.github/actions/ecr-copy-image
      with:
        from-access_key_id: ${{ vars.DEV_AWS_ACCESS_KEY_ID }}
        from-secret_access_key: ${{ secrets.DEV_AWS_SECRET_ACCESS_KEY }}
        from-region: ${{vars.DEV_AWS_REGION}}
        to-access_key_id: ${{ vars.HML_AWS_ACCESS_KEY_ID }}
        to-secret_access_key: ${{ secrets.HML_AWS_SECRET_ACCESS_KEY }}
        to-region: ${{vars.HML_AWS_REGION}}
        repo: ${{github.event.repository.name}}
        tag: ${{github.ref_name}}


  terraform-apply-prd:
    runs-on: ubuntu-latest
    environment: prd
    needs: [terraform-apply-hml]

    steps:
    - id: checkout
      name: checkout
      uses: actions/checkout@v4
      
    - name: "Terraform Apply HML"
      uses: CailleachOrg/tfc-shared-actions/.github/actions/tfc-apply@main
      with:
        tfc-organization: "${{ vars.TFC_ORGANIZATION }}"
        tfc-token: "${{ secrets.TFC_TOKEN }}"
        tfc-workspace: "${{github.event.repository.name}}-hml"
        revision: ${{github.ref_name}}

  node-copy-image-prd:
    runs-on: ubuntu-latest
    environment: prd
    needs: [node-copy-image-hml]
    if: (vars.DEV_AWS_ACCESS_KEY_ID != vars.PRD_AWS_ACCESS_KEY_ID) || (vars.DEV_AWS_REGION != vars.PRD_AWS_REGION)

    steps:
    - id: checkout
      name: checkout
      uses: actions/checkout@v4

    - name: "Copy Image"
      uses: ./.github/actions/ecr-copy-image
      with:
        from-access_key_id: ${{ vars.DEV_AWS_ACCESS_KEY_ID }}
        from-secret_access_key: ${{ secrets.DEV_AWS_SECRET_ACCESS_KEY }}
        from-region: ${{vars.DEV_AWS_REGION}}
        to-access_key_id: ${{ vars.PRD_AWS_ACCESS_KEY_ID }}
        to-secret_access_key: ${{ secrets.PRD_AWS_SECRET_ACCESS_KEY }}
        to-region: ${{vars.PRD_AWS_REGION}}
        repo: ${{github.event.repository.name}}
        tag: ${{github.ref_name}}        
