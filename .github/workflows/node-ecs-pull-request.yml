name: 'NodePullRequest'

on:  
  workflow_call:
    inputs:
      tfc-organization:
        type: string
        required: true
      aws-region:
        required: true
        type: string
      aws-role:
        required: true
        type: string
    secrets:
      tfc-token:
        required: true

env:
  environment: 'dev'
  SERVICE_TYPE: 'ecs-tasks'

jobs:

  terraform-infra-plan:
    runs-on: ubuntu-latest

    steps:
    - id: checkout
      name: checkout
      uses: actions/checkout@v4
      
    - name: "Terraform Infra Plan"
      uses: cailleach-devops/tfc-shared-actions/.github/actions/tfc/tfc-plan@updateWorkflow
      with:
        tfc-organization: "${{ inputs.tfc-organization }}"
        tfc-token: "${{ secrets.tfc-token }}"
        tfc-workspace: "${{github.event.repository.name}}-infra-${{ env.environment }}"
        tfc-cfg-directory: 'terraform/infra'
        scriptOrigin: '** Infrastructure **'
        message: "${{ github.event.pull_request.title }}"

  terraform-app-plan:
    runs-on: ubuntu-latest
    needs: [ terraform-infra-plan ]

    steps:
    - id: checkout
      name: checkout
      uses: actions/checkout@v4
      
    - name: "Terraform App Plan"
      uses: cailleach-devops/tfc-shared-actions/.github/actions/tfc/tfc-plan@updateWorkflow
      with:
        tfc-organization: "${{ inputs.tfc-organizationv }}"
        tfc-token: "${{ secrets.tfc-token }}"
        tfc-workspace: "${{github.event.repository.name}}-app-${{ env.environment }}"
        tfc-cfg-directory: 'terraform/app'
        scriptOrigin: '** Application **'
        message: "${{ github.event.pull_request.title }}"
        


  app-build:
    runs-on: ubuntu-latest
    steps:
    - id: checkout
      name: checkout
      uses: actions/checkout@v4

    - name: buildAndUnityTest
      uses: cailleach-devops/tfc-shared-actions/.github/actions/node/node-build@main
      with:
        node-version: '20.x'
