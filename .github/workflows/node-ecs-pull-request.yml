name: 'NodePullRequest'

on:  
  workflow_call:
    inputs:
      aws-region:
        required: true
        type: string
      aws-role:
        required: true
        type: string

env:
  environment_name: 'dev'
  SERVICE_TYPE: 'ecs-tasks'

permissions:
  contents: read
  pull-requests: write

jobs:
  check-repo-config:
    runs-on: ubuntu-latest

    steps:
    - id: checkout
      name: checkout
      uses: actions/checkout@v4
      
    - name: "CheckConfig"
      uses: CailleachOrg/tfc-shared-actions/.github/actions/aws/ecs-check-config@main
      with:
        ecs-cluster: "${{ vars.ECS_CLUSTER }}"
        ecs-service: "${{ vars.ECS_SERVICE }}"

  create-dev-role:
    runs-on: ubuntu-latest
    depends_on: [ check-repo-config ]
    
    steps:    
    - name: "Create DEV Role"
      uses: CailleachOrg/tfc-shared-actions/.github/actions/aws/aws-create-role@main
      with:
        country: ${{ vars.COUNTRY }}
        region: ${{ inputs.aws-region }}
        role: ${{ inputs.aws-role }}
        environment: $environment_name
        service-name: ${{ vars.ECS_SERVICE }}
        service-type: '$SERVICE_TYPE'

  terraform-app-plan:
    runs-on: ubuntu-latest
    depends_on: [ create-dev-role ]

    steps:
    - id: checkout
      name: checkout
      uses: actions/checkout@v4
      
    - name: "Terraform Plan"
      uses: CailleachOrg/tfc-shared-actions/.github/actions/tfc/tfc-app-plan@main
      with:
        tfc-organization: "${{ vars.TFC_ORGANIZATION }}"
        tfc-token: "${{ secrets.TFC_TOKEN }}"
        tfc-workspace: "${{github.event.repository.name}}-app-$environment_name"
        message: "${{ github.event.pull_request.title }}"

  terraform-infra-plan:
    runs-on: ubuntu-latest
    depends_on: [ create-dev-role ]

    steps:
    - id: checkout
      name: checkout
      uses: actions/checkout@v4
      
    - name: "Terraform Plan"
      uses: CailleachOrg/tfc-shared-actions/.github/actions/tfc/tfc-ecs-infra-plan@main
      with:
        tfc-organization: "${{ vars.TFC_ORGANIZATION }}"
        tfc-token: "${{ secrets.TFC_TOKEN }}"
        tfc-workspace: "${{github.event.repository.name}}-infra-$environment_name"
        message: "${{ github.event.pull_request.title }}"


  app-build:
    runs-on: ubuntu-latest
    steps:
    - id: checkout
      name: checkout
      uses: actions/checkout@v4

    - name: buildAndUnityTest
      uses: CailleachOrg/tfc-shared-actions/.github/actions/node/node-build@main
      with:
        node-version: '20.x'
